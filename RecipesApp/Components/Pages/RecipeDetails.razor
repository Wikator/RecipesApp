@page "/recipes/details/{id:int}"
@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager
@attribute [StreamRendering]

<div id="recipeDetailsContainer">
    @if (recipe is null)
    {
        <Spinner />
    }
    else
    {
        <div class="container mt-5">
            <div class="row">
                <div class="col-md-8 offset-md-2 recipe-container">
                    <div class="row">
                        <div class="col-md-6">
                            <img src="@recipe.ImageUrl" class="img-fluid rounded recipe-image" alt="Recipe Image">
                        </div>
                        <div class="col-md-6">
                            <h1 class="mt-3 text-center">@recipe.Name</h1>
                            <h3 class="mt-4 text-center">Ingredients:</h3>
                            <ul class="ingredients-list text-center">
                                @foreach (var ingredient in recipe.Ingredients)
                                {
                                    <li>@ingredient.Name - @ingredient.Amount</li>
                                }
                            </ul>
                        </div>
                    </div>
                    <h2 class="mt-5 text-center">Instructions:</h2>
                    <p class="instructions">@recipe.Text</p>

                    <Comments CommentList="recipe.Comments" RecipeId="recipe.Id" />

                    <NavLink href="/" class="btn btn-secondary btn-back">Back to list</NavLink>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int? Id { get; set; }
    private RecipeReadOnlyDetailsDto? recipe;

    protected override async Task OnParametersSetAsync()
    {
        if (Id is null)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            var result = await RecipeService.GetByIdAsync(Id.Value);

            if (result.Data is null)
                NavigationManager.NavigateTo("/");
            else
                recipe = result.Data;
        }
    }
}