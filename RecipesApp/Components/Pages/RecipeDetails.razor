@page "/recipes/details/{id:int}"
@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager
@attribute [StreamRendering]

<h3>RecipeDetails</h3>

@if (recipe is null)
{
    <div class="alert alert-info">Loading...</div>
}
else
{
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-8 offset-md-2 recipe-container">
                <img src="@recipe.ImageUrl" class="img-fluid rounded recipe-image" alt="Recipe Image">
                <h1 class="mt-3">@recipe.Name</h1>
                <h3 class="mt-4">Ingredients:</h3>
                <ul class="ingredients-list">
                    @foreach(var ingredient in recipe.Ingredients)
                    {
                        <li>@ingredient.Name - @ingredient.Amount</li>
                    }
                </ul>
                <h3 class="mt-4">Instructions:</h3>
                <p class="instructions">@recipe.Text</p>

                <Comments CommentList="recipe.Comments" RecipeId="recipe.Id" />

                <NavLink href="recipes" class="btn btn-secondary">Back to list</NavLink>

            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int? Id { get; set; }

    private RecipeReadOnlyDetailsDto? recipe;

    protected override async Task OnParametersSetAsync()
    {
        if (Id is null)
        {
            NavigationManager.NavigateTo("recipes");
        }
        else
        {
            var result = await RecipeService.GetByIdAsync(Id.Value);

            if (result.Data is null)
                NavigationManager.NavigateTo("recipes");
            else
                recipe = result.Data;
        }
    }
}
