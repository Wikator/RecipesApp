@page "/recipes/create"
@inject NavigationManager NavigationManager
@inject IRecipeService RecipeService
@rendermode InteractiveAuto
@attribute [Authorize]


<h3>AddRecipe</h3>

<ErrorMessage Message="@error" />

<EditForm Model="model" OnValidSubmit="HandleValidSubmit">
    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="model.Name" />
    </div>
    <div class="mb-3">
        <label for="text" class="form-label">Text</label>
        <InputText id="text" class="form-control" @bind-Value="model.Text" />
    </div>

    @if (model.FileContent != null)
    {
        <div class="mb-3">
            <label>Preview:</label>
            <img src="data:image;base64,@Convert.ToBase64String(model.FileContent)" alt="Preview" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
            <button class="btn btn-danger" @onclick="RemovePicture">Remove Picture</button>
        </div>
    }

    <InputFile OnChange="HandleFileChange" @key="fileInputKey" />
    <button type="submit" class="btn btn-primary" disabled="@(!context.Validate() || isSubmitting)">Create</button>
</EditForm>


@code {
    RecipeUpsertDto model = new();
    string? error;
    bool isSubmitting;
    string fileInputKey = Guid.NewGuid().ToString();

    async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;

        // Read the file content into a byte array
        using (var stream = new MemoryStream())
        {
            await file.OpenReadStream().CopyToAsync(stream);
            model.FileContent = stream.ToArray();
        }

        // Set the file name
        model.FileName = file.Name;
    }

    void RemovePicture()
    {
        model.FileContent = null;
        model.FileName = null;

        fileInputKey = Guid.NewGuid().ToString();
    }

    async Task HandleValidSubmit()
    {
        isSubmitting = true;
        var response = await RecipeService.AddAsync(model);

        if (response.IsSuccessful)
        {
            NavigationManager.NavigateTo("/recipes");
        }
        else
        {
            error = response.Message;
        }
    }
}
